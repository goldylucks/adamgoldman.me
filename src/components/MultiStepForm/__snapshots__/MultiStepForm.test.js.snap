// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MultiStepForm should render flash answer 1`] = `
<MultiStepForm
  answerByStep={
    Object {
      "0": "",
      "1": "",
      "2": "",
    }
  }
  currentStepNum={0}
  hiddenFields={Array []}
  onUpdateProgress={[MockFunction]}
  path="/tools/trauma-relief/5ac43ef0d3b723075ebfd200"
  price={0}
  steps={
    Array [
      Object {
        "answers": Array [
          Object {
            "text": "answer 1",
          },
        ],
        "description": "Step 0 Description",
        "notes": "Step 0 notes",
        "title": "Step 0 Title",
        "type": "flash",
      },
      Object {
        "answers": Array [
          Object {
            "text": "answer 1",
          },
        ],
        "description": "Step 1 Description: \${echo} and \${s0}",
        "notes": "Step 1 notes: \${echo} and \${s0}",
        "title": "Step 1 Title: \${echo} and \${s0}",
        "type": "flash",
      },
    ]
  }
  stepsStack={Array []}
>
  <div>
    <div
      style={
        Object {
          "marginBottom": 30,
        }
      }
    >
      <Markdown
        source="## Step 0 Title"
      >
        <ReactMarkdown
          containerTagName="div"
          parserOptions={Object {}}
          renderers={
            Object {
              "Link": [Function],
            }
          }
          source="## Step 0 Title"
        >
          <div>
            <Heading
              key="1:1-1:152"
              level={2}
              literal={null}
              nodeKey="1:1-1:152"
            >
              <h2
                key="1:1-1:152"
              >
                Step 0 Title
              </h2>
            </Heading>
          </div>
        </ReactMarkdown>
      </Markdown>
    </div>
    <Markdown
      source="Step 0 Description"
    >
      <ReactMarkdown
        containerTagName="div"
        parserOptions={Object {}}
        renderers={
          Object {
            "Link": [Function],
          }
        }
        source="Step 0 Description"
      >
        <div>
          <p
            key="1:1-1:182"
          >
            Step 0 Description
          </p>
        </div>
      </ReactMarkdown>
    </Markdown>
    <Markdown
      className="text-muted tool-note"
      source="Step 0 notes"
    >
      <ReactMarkdown
        className="text-muted tool-note"
        containerTagName="div"
        parserOptions={Object {}}
        renderers={
          Object {
            "Link": [Function],
          }
        }
        source="Step 0 notes"
      >
        <div
          className="text-muted tool-note"
        >
          <p
            key="1:1-1:122"
          >
            Step 0 notes
          </p>
        </div>
      </ReactMarkdown>
    </Markdown>
    <div>
      <button
        onClick={[Function]}
      >
        Flash me!
      </button>
      <p />
    </div>
    <div
      style={
        Object {
          "marginBottom": 20,
          "marginTop": 20,
        }
      }
    >
      <Answers
        answers={
          Array [
            Object {
              "text": "answer 1",
            },
          ]
        }
        onSubmit={[Function]}
        onSubmitOther={[Function]}
        path="/tools/trauma-relief/5ac43ef0d3b723075ebfd200"
      >
        <div>
          <div
            key="0"
            style={
              Object {
                "marginBottom": 10,
              }
            }
          >
            <a
              className="btn btn-primary"
              onClick={[Function]}
              style={
                Object {
                  "width": 84,
                }
              }
            >
              answer 1
            </a>
          </div>
        </div>
      </Answers>
    </div>
    <ExternalA
      className="btn btn-secondary btn-sm"
      href="https://m.me/adamgoldman.me?ref=inner-circle"
    >
      <a
        className="btn btn-secondary btn-sm"
        href="https://m.me/adamgoldman.me?ref=inner-circle"
        rel="nofollow noreferrer noopener"
        target="_blank"
      >
        Subscribe to future tools
      </a>
    </ExternalA>
  </div>
</MultiStepForm>
`;

exports[`MultiStepForm should render long answer 1`] = `
<MultiStepForm
  answerByStep={
    Object {
      "0": "",
      "1": "",
      "2": "",
    }
  }
  currentStepNum={0}
  hiddenFields={Array []}
  onUpdateProgress={[MockFunction]}
  path="/tools/trauma-relief/5ac43ef0d3b723075ebfd200"
  price={0}
  steps={
    Array [
      Object {
        "description": "Step 0 Description",
        "notes": "Step 0 notes",
        "title": "Step 0 Title",
        "type": "long",
      },
      Object {
        "description": "Step 1 Description: \${echo} and \${s0}",
        "notes": "Step 1 notes: \${echo} and \${s0}",
        "title": "Step 1 Title: \${echo} and \${s0}",
        "type": "long",
      },
    ]
  }
  stepsStack={Array []}
>
  <div>
    <div
      style={
        Object {
          "marginBottom": 30,
        }
      }
    >
      <Markdown
        source="## Step 0 Title"
      >
        <ReactMarkdown
          containerTagName="div"
          parserOptions={Object {}}
          renderers={
            Object {
              "Link": [Function],
            }
          }
          source="## Step 0 Title"
        >
          <div>
            <Heading
              key="1:1-1:152"
              level={2}
              literal={null}
              nodeKey="1:1-1:152"
            >
              <h2
                key="1:1-1:152"
              >
                Step 0 Title
              </h2>
            </Heading>
          </div>
        </ReactMarkdown>
      </Markdown>
    </div>
    <Markdown
      source="Step 0 Description"
    >
      <ReactMarkdown
        containerTagName="div"
        parserOptions={Object {}}
        renderers={
          Object {
            "Link": [Function],
          }
        }
        source="Step 0 Description"
      >
        <div>
          <p
            key="1:1-1:182"
          >
            Step 0 Description
          </p>
        </div>
      </ReactMarkdown>
    </Markdown>
    <Markdown
      className="text-muted tool-note"
      source="Step 0 notes"
    >
      <ReactMarkdown
        className="text-muted tool-note"
        containerTagName="div"
        parserOptions={Object {}}
        renderers={
          Object {
            "Link": [Function],
          }
        }
        source="Step 0 notes"
      >
        <div
          className="text-muted tool-note"
        >
          <p
            key="1:1-1:122"
          >
            Step 0 notes
          </p>
        </div>
      </ReactMarkdown>
    </Markdown>
    <form
      onSubmit={[Function]}
    >
      <div
        className="form-group"
      >
        <textarea
          aria-describedby="inputHelp"
          autoFocus={true}
          className="form-control"
          onChange={[Function]}
          placeholder="write your answer here"
          required={true}
          value=""
        />
        <small
          className="form-text text-muted"
          id="inputHelp"
        >
          <ExternalA
            href="/privacy"
            target="_blank"
          >
            <a
              href="/privacy"
              rel="nofollow noreferrer noopener"
              target="_blank"
            >
              Privacy is sacred. Your data is safe.
            </a>
          </ExternalA>
        </small>
      </div>
      <button
        className="btn btn-primary"
        type="submit"
      >
        Continue
      </button>
    </form>
    <ExternalA
      className="btn btn-secondary btn-sm"
      href="https://m.me/adamgoldman.me?ref=inner-circle"
    >
      <a
        className="btn btn-secondary btn-sm"
        href="https://m.me/adamgoldman.me?ref=inner-circle"
        rel="nofollow noreferrer noopener"
        target="_blank"
      >
        Subscribe to future tools
      </a>
    </ExternalA>
  </div>
</MultiStepForm>
`;

exports[`MultiStepForm should render payment 1`] = `
<MultiStepForm
  answerByStep={
    Object {
      "0": "",
      "1": "",
      "2": "",
    }
  }
  currentStepNum={0}
  hiddenFields={Array []}
  onUpdateProgress={[MockFunction]}
  path="/tools/trauma-relief/5ac43ef0d3b723075ebfd200"
  price={0}
  steps={
    Array [
      Object {
        "description": "Step 0 Description",
        "notes": "Step 0 notes",
        "title": "Step 0 Title",
        "type": "payment",
      },
      Object {
        "description": "Step 1 Description: \${echo} and \${s0}",
        "notes": "Step 1 notes: \${echo} and \${s0}",
        "title": "Step 1 Title: \${echo} and \${s0}",
        "type": "payment",
      },
    ]
  }
  stepsStack={Array []}
>
  <div>
    <div
      style={
        Object {
          "marginBottom": 30,
        }
      }
    >
      <Markdown
        source="## Step 0 Title"
      >
        <ReactMarkdown
          containerTagName="div"
          parserOptions={Object {}}
          renderers={
            Object {
              "Link": [Function],
            }
          }
          source="## Step 0 Title"
        >
          <div>
            <Heading
              key="1:1-1:152"
              level={2}
              literal={null}
              nodeKey="1:1-1:152"
            >
              <h2
                key="1:1-1:152"
              >
                Step 0 Title
              </h2>
            </Heading>
          </div>
        </ReactMarkdown>
      </Markdown>
    </div>
    <Markdown
      source="Step 0 Description"
    >
      <ReactMarkdown
        containerTagName="div"
        parserOptions={Object {}}
        renderers={
          Object {
            "Link": [Function],
          }
        }
        source="Step 0 Description"
      >
        <div>
          <p
            key="1:1-1:182"
          >
            Step 0 Description
          </p>
        </div>
      </ReactMarkdown>
    </Markdown>
    <Markdown
      className="text-muted tool-note"
      source="Step 0 notes"
    >
      <ReactMarkdown
        className="text-muted tool-note"
        containerTagName="div"
        parserOptions={Object {}}
        renderers={
          Object {
            "Link": [Function],
          }
        }
        source="Step 0 notes"
      >
        <div
          className="text-muted tool-note"
        >
          <p
            key="1:1-1:122"
          >
            Step 0 notes
          </p>
        </div>
      </ReactMarkdown>
    </Markdown>
    <form
      action="https://www.paypal.com/cgi-bin/webscr"
      method="post"
      target="_blank"
    >
      <input
        name="cmd"
        type="hidden"
        value="_s-xclick"
      />
      <input
        name="hosted_button_id"
        type="hidden"
        value="L73XBAVRMGQ6S"
      />
      <div
        className="form-group"
      >
        <select
          className="form-control"
          name="os0"
          onChange={[Function]}
          value={0}
        >
          <option
            value="7"
          >
            $7 USD
          </option>
          <option
            value="9"
          >
            $9 USD
          </option>
          <option
            value="23"
          >
            $23 USD
          </option>
          <option
            value="30"
          >
            $30 USD
          </option>
          <option
            value="70"
          >
            $70 USD
          </option>
          <option
            value="140"
          >
            $140 USD
          </option>
          <option
            value="350"
          >
            $350 USD
          </option>
          <option
            value="600"
          >
            $600 USD
          </option>
          <option
            value="970"
          >
            $970 USD
          </option>
        </select>
      </div>
      <input
        name="currency_code"
        type="hidden"
        value="USD"
      />
      <input
        alt="PayPal - The safer, easier way to pay online!"
        border="0"
        name="submit"
        src="https://www.paypalobjects.com/en_US/IL/i/btn/btn_buynowCC_LG.gif"
        style={
          Object {
            "width": "auto",
          }
        }
        type="image"
      />
      <img
        alt=""
        border="0"
        height="1"
        src="https://www.paypalobjects.com/en_US/i/scr/pixel.gif"
        style={
          Object {
            "display": "none",
          }
        }
        width="1"
      />
    </form>
    <ExternalA
      className="btn btn-secondary btn-sm"
      href="https://m.me/adamgoldman.me?ref=inner-circle"
    >
      <a
        className="btn btn-secondary btn-sm"
        href="https://m.me/adamgoldman.me?ref=inner-circle"
        rel="nofollow noreferrer noopener"
        target="_blank"
      >
        Subscribe to future tools
      </a>
    </ExternalA>
  </div>
</MultiStepForm>
`;

exports[`MultiStepForm should render radio answers 1`] = `
<MultiStepForm
  answerByStep={
    Object {
      "0": "",
      "1": "",
      "2": "",
    }
  }
  currentStepNum={0}
  hiddenFields={Array []}
  onUpdateProgress={[MockFunction]}
  path="/tools/trauma-relief/5ac43ef0d3b723075ebfd200"
  price={0}
  steps={
    Array [
      Object {
        "answers": Array [
          Object {
            "text": "answer 1",
          },
        ],
        "description": "Step 0 Description",
        "notes": "Step 0 notes",
        "title": "Step 0 Title",
        "type": "radio",
      },
      Object {
        "answers": Array [
          Object {
            "text": "answer 1",
          },
        ],
        "description": "Step 1 Description: \${echo} and \${s0}",
        "notes": "Step 1 notes: \${echo} and \${s0}",
        "title": "Step 1 Title: \${echo} and \${s0}",
        "type": "radio",
      },
    ]
  }
  stepsStack={Array []}
>
  <div>
    <div
      style={
        Object {
          "marginBottom": 30,
        }
      }
    >
      <Markdown
        source="## Step 0 Title"
      >
        <ReactMarkdown
          containerTagName="div"
          parserOptions={Object {}}
          renderers={
            Object {
              "Link": [Function],
            }
          }
          source="## Step 0 Title"
        >
          <div>
            <Heading
              key="1:1-1:152"
              level={2}
              literal={null}
              nodeKey="1:1-1:152"
            >
              <h2
                key="1:1-1:152"
              >
                Step 0 Title
              </h2>
            </Heading>
          </div>
        </ReactMarkdown>
      </Markdown>
    </div>
    <Markdown
      source="Step 0 Description"
    >
      <ReactMarkdown
        containerTagName="div"
        parserOptions={Object {}}
        renderers={
          Object {
            "Link": [Function],
          }
        }
        source="Step 0 Description"
      >
        <div>
          <p
            key="1:1-1:182"
          >
            Step 0 Description
          </p>
        </div>
      </ReactMarkdown>
    </Markdown>
    <Markdown
      className="text-muted tool-note"
      source="Step 0 notes"
    >
      <ReactMarkdown
        className="text-muted tool-note"
        containerTagName="div"
        parserOptions={Object {}}
        renderers={
          Object {
            "Link": [Function],
          }
        }
        source="Step 0 notes"
      >
        <div
          className="text-muted tool-note"
        >
          <p
            key="1:1-1:122"
          >
            Step 0 notes
          </p>
        </div>
      </ReactMarkdown>
    </Markdown>
    <div
      style={
        Object {
          "marginBottom": 20,
          "marginTop": 20,
        }
      }
    >
      <Answers
        answers={
          Array [
            Object {
              "text": "answer 1",
            },
          ]
        }
        onSubmit={[Function]}
        onSubmitOther={[Function]}
        path="/tools/trauma-relief/5ac43ef0d3b723075ebfd200"
      >
        <div>
          <div
            key="0"
            style={
              Object {
                "marginBottom": 10,
              }
            }
          >
            <a
              className="btn btn-primary"
              onClick={[Function]}
              style={
                Object {
                  "width": 84,
                }
              }
            >
              answer 1
            </a>
          </div>
        </div>
      </Answers>
    </div>
    <ExternalA
      className="btn btn-secondary btn-sm"
      href="https://m.me/adamgoldman.me?ref=inner-circle"
    >
      <a
        className="btn btn-secondary btn-sm"
        href="https://m.me/adamgoldman.me?ref=inner-circle"
        rel="nofollow noreferrer noopener"
        target="_blank"
      >
        Subscribe to future tools
      </a>
    </ExternalA>
  </div>
</MultiStepForm>
`;

exports[`MultiStepForm should render short answer 1`] = `
<MultiStepForm
  answerByStep={
    Object {
      "0": "",
      "1": "",
      "2": "",
    }
  }
  currentStepNum={0}
  hiddenFields={Array []}
  onUpdateProgress={[MockFunction]}
  path="/tools/trauma-relief/5ac43ef0d3b723075ebfd200"
  price={0}
  steps={
    Array [
      Object {
        "description": "Step 0 Description",
        "notes": "Step 0 notes",
        "title": "Step 0 Title",
        "type": "short",
      },
      Object {
        "description": "Step 1 Description: \${echo} and \${s0}",
        "notes": "Step 1 notes: \${echo} and \${s0}",
        "title": "Step 1 Title: \${echo} and \${s0}",
        "type": "short",
      },
    ]
  }
  stepsStack={Array []}
>
  <div>
    <div
      style={
        Object {
          "marginBottom": 30,
        }
      }
    >
      <Markdown
        source="## Step 0 Title"
      >
        <ReactMarkdown
          containerTagName="div"
          parserOptions={Object {}}
          renderers={
            Object {
              "Link": [Function],
            }
          }
          source="## Step 0 Title"
        >
          <div>
            <Heading
              key="1:1-1:152"
              level={2}
              literal={null}
              nodeKey="1:1-1:152"
            >
              <h2
                key="1:1-1:152"
              >
                Step 0 Title
              </h2>
            </Heading>
          </div>
        </ReactMarkdown>
      </Markdown>
    </div>
    <Markdown
      source="Step 0 Description"
    >
      <ReactMarkdown
        containerTagName="div"
        parserOptions={Object {}}
        renderers={
          Object {
            "Link": [Function],
          }
        }
        source="Step 0 Description"
      >
        <div>
          <p
            key="1:1-1:182"
          >
            Step 0 Description
          </p>
        </div>
      </ReactMarkdown>
    </Markdown>
    <Markdown
      className="text-muted tool-note"
      source="Step 0 notes"
    >
      <ReactMarkdown
        className="text-muted tool-note"
        containerTagName="div"
        parserOptions={Object {}}
        renderers={
          Object {
            "Link": [Function],
          }
        }
        source="Step 0 notes"
      >
        <div
          className="text-muted tool-note"
        >
          <p
            key="1:1-1:122"
          >
            Step 0 notes
          </p>
        </div>
      </ReactMarkdown>
    </Markdown>
    <form
      onSubmit={[Function]}
    >
      <div
        className="form-group"
      >
        <input
          aria-describedby="inputHelp"
          autoFocus={true}
          className="form-control"
          onChange={[Function]}
          placeholder="write your answer here"
          required={true}
          value=""
        />
        <small
          className="form-text text-muted"
          id="inputHelp"
        >
          <ExternalA
            href="/privacy"
            target="_blank"
          >
            <a
              href="/privacy"
              rel="nofollow noreferrer noopener"
              target="_blank"
            >
              Privacy is sacred. Your data is safe.
            </a>
          </ExternalA>
        </small>
      </div>
      <button
        className="btn btn-primary"
        type="submit"
      >
        Press Enter or click to Continue
      </button>
    </form>
    <ExternalA
      className="btn btn-secondary btn-sm"
      href="https://m.me/adamgoldman.me?ref=inner-circle"
    >
      <a
        className="btn btn-secondary btn-sm"
        href="https://m.me/adamgoldman.me?ref=inner-circle"
        rel="nofollow noreferrer noopener"
        target="_blank"
      >
        Subscribe to future tools
      </a>
    </ExternalA>
  </div>
</MultiStepForm>
`;

exports[`MultiStepForm should render short answer 2`] = `
<MultiStepForm
  answerByStep={
    Object {
      "0": "",
      "1": "",
      "2": "",
    }
  }
  currentStepNum={0}
  hiddenFields={Array []}
  onUpdateProgress={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "answerByStep": Object {
              "0": "Answer step 0",
              "1": "",
              "2": "",
            },
            "currentStepNum": 0,
            "flashedIdx": 0,
            "isFlashing": false,
            "price": 0,
            "stepsStack": Array [],
          },
        ],
      ],
    }
  }
  path="/tools/trauma-relief/5ac43ef0d3b723075ebfd200"
  price={0}
  steps={
    Array [
      Object {
        "description": "Step 0 Description",
        "notes": "Step 0 notes",
        "title": "Step 0 Title",
        "type": "short",
      },
      Object {
        "description": "Step 1 Description: \${echo} and \${s0}",
        "notes": "Step 1 notes: \${echo} and \${s0}",
        "title": "Step 1 Title: \${echo} and \${s0}",
        "type": "short",
      },
    ]
  }
  stepsStack={Array []}
>
  <div>
    <div
      style={
        Object {
          "marginBottom": 30,
        }
      }
    >
      <Markdown
        source="## Step 1 Title: ***“Answer step 0”*** and Answer step 0"
      >
        <ReactMarkdown
          containerTagName="div"
          parserOptions={Object {}}
          renderers={
            Object {
              "Link": [Function],
            }
          }
          source="## Step 1 Title: ***“Answer step 0”*** and Answer step 0"
        >
          <div>
            <Heading
              key="1:1-1:568"
              level={2}
              literal={null}
              nodeKey="1:1-1:568"
            >
              <h2
                key="1:1-1:568"
              >
                Step 1 Title: 
                <strong
                  key="1:1-1:566"
                >
                  <em
                    key="1:1-1:565"
                  >
                    “Answer step 0”
                  </em>
                </strong>
                 and Answer step 0
              </h2>
            </Heading>
          </div>
        </ReactMarkdown>
      </Markdown>
    </div>
    <Markdown
      source="Step 1 Description: ***“Answer step 0”*** and Answer step 0"
    >
      <ReactMarkdown
        containerTagName="div"
        parserOptions={Object {}}
        renderers={
          Object {
            "Link": [Function],
          }
        }
        source="Step 1 Description: ***“Answer step 0”*** and Answer step 0"
      >
        <div>
          <p
            key="1:1-1:598"
          >
            Step 1 Description: 
            <strong
              key="1:1-1:596"
            >
              <em
                key="1:1-1:595"
              >
                “Answer step 0”
              </em>
            </strong>
             and Answer step 0
          </p>
        </div>
      </ReactMarkdown>
    </Markdown>
    <Markdown
      className="text-muted tool-note"
      source="Step 1 notes: ***“Answer step 0”*** and Answer step 0"
    >
      <ReactMarkdown
        className="text-muted tool-note"
        containerTagName="div"
        parserOptions={Object {}}
        renderers={
          Object {
            "Link": [Function],
          }
        }
        source="Step 1 notes: ***“Answer step 0”*** and Answer step 0"
      >
        <div
          className="text-muted tool-note"
        >
          <p
            key="1:1-1:538"
          >
            Step 1 notes: 
            <strong
              key="1:1-1:536"
            >
              <em
                key="1:1-1:535"
              >
                “Answer step 0”
              </em>
            </strong>
             and Answer step 0
          </p>
        </div>
      </ReactMarkdown>
    </Markdown>
    <form
      onSubmit={[Function]}
    >
      <div
        className="form-group"
      >
        <input
          aria-describedby="inputHelp"
          autoFocus={true}
          className="form-control"
          onChange={[Function]}
          placeholder="write your answer here"
          required={true}
          value=""
        />
        <small
          className="form-text text-muted"
          id="inputHelp"
        >
          <ExternalA
            href="/privacy"
            target="_blank"
          >
            <a
              href="/privacy"
              rel="nofollow noreferrer noopener"
              target="_blank"
            >
              Privacy is sacred. Your data is safe.
            </a>
          </ExternalA>
        </small>
      </div>
      <button
        className="btn btn-primary"
        type="submit"
      >
        Press Enter or click to Continue
      </button>
    </form>
    <button
      className="btn btn-secondary btn-sm btn-back"
      onClick={[Function]}
      style={
        Object {
          "display": "block",
          "marginBottom": 10,
        }
      }
    >
      Back
    </button>
    <ExternalA
      className="btn btn-secondary btn-sm"
      href="https://m.me/adamgoldman.me?ref=inner-circle"
    >
      <a
        className="btn btn-secondary btn-sm"
        href="https://m.me/adamgoldman.me?ref=inner-circle"
        rel="nofollow noreferrer noopener"
        target="_blank"
      >
        Subscribe to future tools
      </a>
    </ExternalA>
  </div>
</MultiStepForm>
`;

exports[`MultiStepForm should render short answer 3`] = `
<MultiStepForm
  answerByStep={
    Object {
      "0": "",
      "1": "",
      "2": "",
    }
  }
  currentStepNum={0}
  hiddenFields={Array []}
  onUpdateProgress={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "answerByStep": Object {
              "0": "Answer step 0",
              "1": "",
              "2": "",
            },
            "currentStepNum": 0,
            "flashedIdx": 0,
            "isFlashing": false,
            "price": 0,
            "stepsStack": Array [],
          },
        ],
        Array [
          Object {
            "answerByStep": Object {
              "0": "Answer step 0",
              "1": "",
              "2": "",
            },
            "currentStepNum": 1,
            "flashedIdx": 0,
            "isFlashing": false,
            "price": 0,
            "stepsStack": Array [],
          },
        ],
      ],
    }
  }
  path="/tools/trauma-relief/5ac43ef0d3b723075ebfd200"
  price={0}
  steps={
    Array [
      Object {
        "description": "Step 0 Description",
        "notes": "Step 0 notes",
        "title": "Step 0 Title",
        "type": "short",
      },
      Object {
        "description": "Step 1 Description: \${echo} and \${s0}",
        "notes": "Step 1 notes: \${echo} and \${s0}",
        "title": "Step 1 Title: \${echo} and \${s0}",
        "type": "short",
      },
    ]
  }
  stepsStack={Array []}
>
  <div>
    <div
      style={
        Object {
          "marginBottom": 30,
        }
      }
    >
      <Markdown
        source="## Step 0 Title"
      >
        <ReactMarkdown
          containerTagName="div"
          parserOptions={Object {}}
          renderers={
            Object {
              "Link": [Function],
            }
          }
          source="## Step 0 Title"
        >
          <div>
            <Heading
              key="1:1-1:152"
              level={2}
              literal={null}
              nodeKey="1:1-1:152"
            >
              <h2
                key="1:1-1:152"
              >
                Step 0 Title
              </h2>
            </Heading>
          </div>
        </ReactMarkdown>
      </Markdown>
    </div>
    <Markdown
      source="Step 0 Description"
    >
      <ReactMarkdown
        containerTagName="div"
        parserOptions={Object {}}
        renderers={
          Object {
            "Link": [Function],
          }
        }
        source="Step 0 Description"
      >
        <div>
          <p
            key="1:1-1:182"
          >
            Step 0 Description
          </p>
        </div>
      </ReactMarkdown>
    </Markdown>
    <Markdown
      className="text-muted tool-note"
      source="Step 0 notes"
    >
      <ReactMarkdown
        className="text-muted tool-note"
        containerTagName="div"
        parserOptions={Object {}}
        renderers={
          Object {
            "Link": [Function],
          }
        }
        source="Step 0 notes"
      >
        <div
          className="text-muted tool-note"
        >
          <p
            key="1:1-1:122"
          >
            Step 0 notes
          </p>
        </div>
      </ReactMarkdown>
    </Markdown>
    <form
      onSubmit={[Function]}
    >
      <div
        className="form-group"
      >
        <input
          aria-describedby="inputHelp"
          autoFocus={true}
          className="form-control"
          onChange={[Function]}
          placeholder="write your answer here"
          required={true}
          value="Answer step 0"
        />
        <small
          className="form-text text-muted"
          id="inputHelp"
        >
          <ExternalA
            href="/privacy"
            target="_blank"
          >
            <a
              href="/privacy"
              rel="nofollow noreferrer noopener"
              target="_blank"
            >
              Privacy is sacred. Your data is safe.
            </a>
          </ExternalA>
        </small>
      </div>
      <button
        className="btn btn-primary"
        type="submit"
      >
        Press Enter or click to Continue
      </button>
    </form>
    <ExternalA
      className="btn btn-secondary btn-sm"
      href="https://m.me/adamgoldman.me?ref=inner-circle"
    >
      <a
        className="btn btn-secondary btn-sm"
        href="https://m.me/adamgoldman.me?ref=inner-circle"
        rel="nofollow noreferrer noopener"
        target="_blank"
      >
        Subscribe to future tools
      </a>
    </ExternalA>
  </div>
</MultiStepForm>
`;

exports[`MultiStepForm should render short answer 4`] = `
<MultiStepForm
  answerByStep={
    Object {
      "0": "",
      "1": "",
      "2": "",
    }
  }
  currentStepNum={0}
  hiddenFields={Array []}
  onUpdateProgress={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "answerByStep": Object {
              "0": "Answer step 0",
              "1": "",
              "2": "",
            },
            "currentStepNum": 0,
            "flashedIdx": 0,
            "isFlashing": false,
            "price": 0,
            "stepsStack": Array [],
          },
        ],
        Array [
          Object {
            "answerByStep": Object {
              "0": "Answer step 0",
              "1": "",
              "2": "",
            },
            "currentStepNum": 1,
            "flashedIdx": 0,
            "isFlashing": false,
            "price": 0,
            "stepsStack": Array [],
          },
        ],
      ],
    }
  }
  path="/tools/trauma-relief/5ac43ef0d3b723075ebfd200"
  price={0}
  steps={
    Array [
      Object {
        "description": "Step 0 Description",
        "notes": "Step 0 notes",
        "title": "Step 0 Title",
        "type": "short",
      },
      Object {
        "description": "Step 1 Description: \${echo} and \${s0}",
        "notes": "Step 1 notes: \${echo} and \${s0}",
        "title": "Step 1 Title: \${echo} and \${s0}",
        "type": "short",
      },
    ]
  }
  stepsStack={Array []}
>
  <div>
    <div
      style={
        Object {
          "marginBottom": 30,
        }
      }
    >
      <Markdown
        source="## Step 0 Title"
      >
        <ReactMarkdown
          containerTagName="div"
          parserOptions={Object {}}
          renderers={
            Object {
              "Link": [Function],
            }
          }
          source="## Step 0 Title"
        >
          <div>
            <Heading
              key="1:1-1:152"
              level={2}
              literal={null}
              nodeKey="1:1-1:152"
            >
              <h2
                key="1:1-1:152"
              >
                Step 0 Title
              </h2>
            </Heading>
          </div>
        </ReactMarkdown>
      </Markdown>
    </div>
    <Markdown
      source="Step 0 Description"
    >
      <ReactMarkdown
        containerTagName="div"
        parserOptions={Object {}}
        renderers={
          Object {
            "Link": [Function],
          }
        }
        source="Step 0 Description"
      >
        <div>
          <p
            key="1:1-1:182"
          >
            Step 0 Description
          </p>
        </div>
      </ReactMarkdown>
    </Markdown>
    <Markdown
      className="text-muted tool-note"
      source="Step 0 notes"
    >
      <ReactMarkdown
        className="text-muted tool-note"
        containerTagName="div"
        parserOptions={Object {}}
        renderers={
          Object {
            "Link": [Function],
          }
        }
        source="Step 0 notes"
      >
        <div
          className="text-muted tool-note"
        >
          <p
            key="1:1-1:122"
          >
            Step 0 notes
          </p>
        </div>
      </ReactMarkdown>
    </Markdown>
    <form
      onSubmit={[Function]}
    >
      <div
        className="form-group"
      >
        <input
          aria-describedby="inputHelp"
          autoFocus={true}
          className="form-control"
          onChange={[Function]}
          placeholder="write your answer here"
          required={true}
          value="It's short answer for step 0"
        />
        <small
          className="form-text text-muted"
          id="inputHelp"
        >
          <ExternalA
            href="/privacy"
            target="_blank"
          >
            <a
              href="/privacy"
              rel="nofollow noreferrer noopener"
              target="_blank"
            >
              Privacy is sacred. Your data is safe.
            </a>
          </ExternalA>
        </small>
      </div>
      <button
        className="btn btn-primary"
        type="submit"
      >
        Press Enter or click to Continue
      </button>
    </form>
    <ExternalA
      className="btn btn-secondary btn-sm"
      href="https://m.me/adamgoldman.me?ref=inner-circle"
    >
      <a
        className="btn btn-secondary btn-sm"
        href="https://m.me/adamgoldman.me?ref=inner-circle"
        rel="nofollow noreferrer noopener"
        target="_blank"
      >
        Subscribe to future tools
      </a>
    </ExternalA>
  </div>
</MultiStepForm>
`;

exports[`MultiStepForm should render stars review 1`] = `
<MultiStepForm
  answerByStep={
    Object {
      "0": "",
      "1": "",
      "2": "",
    }
  }
  currentStepNum={0}
  hiddenFields={Array []}
  onUpdateProgress={[MockFunction]}
  path="/tools/trauma-relief/5ac43ef0d3b723075ebfd200"
  price={0}
  steps={
    Array [
      Object {
        "description": "Step 0 Description",
        "notes": "Step 0 notes",
        "title": "Step 0 Title",
        "type": "stars-review",
      },
      Object {
        "description": "Step 1 Description: \${echo} and \${s0}",
        "notes": "Step 1 notes: \${echo} and \${s0}",
        "title": "Step 1 Title: \${echo} and \${s0}",
        "type": "stars-review",
      },
    ]
  }
  stepsStack={Array []}
>
  <div>
    <div
      style={
        Object {
          "marginBottom": 30,
        }
      }
    >
      <Markdown
        source="## Step 0 Title"
      >
        <ReactMarkdown
          containerTagName="div"
          parserOptions={Object {}}
          renderers={
            Object {
              "Link": [Function],
            }
          }
          source="## Step 0 Title"
        >
          <div>
            <Heading
              key="1:1-1:152"
              level={2}
              literal={null}
              nodeKey="1:1-1:152"
            >
              <h2
                key="1:1-1:152"
              >
                Step 0 Title
              </h2>
            </Heading>
          </div>
        </ReactMarkdown>
      </Markdown>
    </div>
    <Markdown
      source="Step 0 Description"
    >
      <ReactMarkdown
        containerTagName="div"
        parserOptions={Object {}}
        renderers={
          Object {
            "Link": [Function],
          }
        }
        source="Step 0 Description"
      >
        <div>
          <p
            key="1:1-1:182"
          >
            Step 0 Description
          </p>
        </div>
      </ReactMarkdown>
    </Markdown>
    <Markdown
      className="text-muted tool-note"
      source="Step 0 notes"
    >
      <ReactMarkdown
        className="text-muted tool-note"
        containerTagName="div"
        parserOptions={Object {}}
        renderers={
          Object {
            "Link": [Function],
          }
        }
        source="Step 0 notes"
      >
        <div
          className="text-muted tool-note"
        >
          <p
            key="1:1-1:122"
          >
            Step 0 notes
          </p>
        </div>
      </ReactMarkdown>
    </Markdown>
    <ReactStars
      char="★"
      color1="gray"
      color2="#ffd700"
      count={5}
      edit={true}
      half={false}
      onChange={[Function]}
      size={60}
      value={0}
    >
      <div
        style={
          Object {
            "overflow": "hidden",
            "position": "relative",
          }
        }
      >
        <span
          className=""
          data-forhalf="★"
          data-index={0}
          key="0"
          onClick={[Function]}
          onMouseLeave={[Function]}
          onMouseMove={[Function]}
          onMouseOver={[Function]}
          style={
            Object {
              "color": "gray",
              "cursor": "pointer",
              "display": "block",
              "float": "left",
              "fontSize": "60px",
              "overflow": "hidden",
              "position": "relative",
            }
          }
        >
          ★
        </span>
        <span
          className=""
          data-forhalf="★"
          data-index={1}
          key="1"
          onClick={[Function]}
          onMouseLeave={[Function]}
          onMouseMove={[Function]}
          onMouseOver={[Function]}
          style={
            Object {
              "color": "gray",
              "cursor": "pointer",
              "display": "block",
              "float": "left",
              "fontSize": "60px",
              "overflow": "hidden",
              "position": "relative",
            }
          }
        >
          ★
        </span>
        <span
          className=""
          data-forhalf="★"
          data-index={2}
          key="2"
          onClick={[Function]}
          onMouseLeave={[Function]}
          onMouseMove={[Function]}
          onMouseOver={[Function]}
          style={
            Object {
              "color": "gray",
              "cursor": "pointer",
              "display": "block",
              "float": "left",
              "fontSize": "60px",
              "overflow": "hidden",
              "position": "relative",
            }
          }
        >
          ★
        </span>
        <span
          className=""
          data-forhalf="★"
          data-index={3}
          key="3"
          onClick={[Function]}
          onMouseLeave={[Function]}
          onMouseMove={[Function]}
          onMouseOver={[Function]}
          style={
            Object {
              "color": "gray",
              "cursor": "pointer",
              "display": "block",
              "float": "left",
              "fontSize": "60px",
              "overflow": "hidden",
              "position": "relative",
            }
          }
        >
          ★
        </span>
        <span
          className=""
          data-forhalf="★"
          data-index={4}
          key="4"
          onClick={[Function]}
          onMouseLeave={[Function]}
          onMouseMove={[Function]}
          onMouseOver={[Function]}
          style={
            Object {
              "color": "gray",
              "cursor": "pointer",
              "display": "block",
              "float": "left",
              "fontSize": "60px",
              "overflow": "hidden",
              "position": "relative",
            }
          }
        >
          ★
        </span>
      </div>
    </ReactStars>
    <ExternalA
      className="btn btn-secondary btn-sm"
      href="https://m.me/adamgoldman.me?ref=inner-circle"
    >
      <a
        className="btn btn-secondary btn-sm"
        href="https://m.me/adamgoldman.me?ref=inner-circle"
        rel="nofollow noreferrer noopener"
        target="_blank"
      >
        Subscribe to future tools
      </a>
    </ExternalA>
  </div>
</MultiStepForm>
`;

exports[`MultiStepForm with data 1`] = `
<MultiStepForm
  answerByStep={
    Object {
      "0": "My name is neo",
      "1": "",
      "2": "",
    }
  }
  currentStepNum={1}
  hiddenFields={Array []}
  onUpdateProgress={[MockFunction]}
  path="/tools/trauma-relief/5ac43ef0d3b723075ebfd200"
  price={0}
  steps={
    Array [
      Object {
        "title": "Title",
        "type": "short",
      },
      Object {
        "description": "\${echo} and \${s0} and me",
        "title": "Title",
        "type": "short",
      },
    ]
  }
  stepsStack={
    Array [
      0,
    ]
  }
>
  <div>
    <div
      style={
        Object {
          "marginBottom": 30,
        }
      }
    >
      <Markdown
        source="## Title"
      >
        <ReactMarkdown
          containerTagName="div"
          parserOptions={Object {}}
          renderers={
            Object {
              "Link": [Function],
            }
          }
          source="## Title"
        >
          <div>
            <Heading
              key="1:1-1:82"
              level={2}
              literal={null}
              nodeKey="1:1-1:82"
            >
              <h2
                key="1:1-1:82"
              >
                Title
              </h2>
            </Heading>
          </div>
        </ReactMarkdown>
      </Markdown>
    </div>
    <Markdown
      source="***“My name is neo”*** and My name is neo and me"
    >
      <ReactMarkdown
        containerTagName="div"
        parserOptions={Object {}}
        renderers={
          Object {
            "Link": [Function],
          }
        }
        source="***“My name is neo”*** and My name is neo and me"
      >
        <div>
          <p
            key="1:1-1:487"
          >
            <strong
              key="1:1-1:485"
            >
              <em
                key="1:1-1:484"
              >
                “My name is neo”
              </em>
            </strong>
             and My name is neo and me
          </p>
        </div>
      </ReactMarkdown>
    </Markdown>
    <form
      onSubmit={[Function]}
    >
      <div
        className="form-group"
      >
        <input
          aria-describedby="inputHelp"
          autoFocus={true}
          className="form-control"
          onChange={[Function]}
          placeholder="write your answer here"
          required={true}
          value=""
        />
        <small
          className="form-text text-muted"
          id="inputHelp"
        >
          <ExternalA
            href="/privacy"
            target="_blank"
          >
            <a
              href="/privacy"
              rel="nofollow noreferrer noopener"
              target="_blank"
            >
              Privacy is sacred. Your data is safe.
            </a>
          </ExternalA>
        </small>
      </div>
      <button
        className="btn btn-primary"
        type="submit"
      >
        Press Enter or click to Continue
      </button>
    </form>
    <button
      className="btn btn-secondary btn-sm btn-back"
      onClick={[Function]}
      style={
        Object {
          "display": "block",
          "marginBottom": 10,
        }
      }
    >
      Back
    </button>
    <ExternalA
      className="btn btn-secondary btn-sm"
      href="https://m.me/adamgoldman.me?ref=inner-circle"
    >
      <a
        className="btn btn-secondary btn-sm"
        href="https://m.me/adamgoldman.me?ref=inner-circle"
        rel="nofollow noreferrer noopener"
        target="_blank"
      >
        Subscribe to future tools
      </a>
    </ExternalA>
  </div>
</MultiStepForm>
`;
